summarize(monthly_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
monthly_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup() %>%
mutate(month = as_date(month),
month_text = month(month, label = TRUE, abbr = TRUE),
year = as_factor(year(month)),
# convert F to C
monthly_temp = (monthly_temp-32)*(5/9))
View(temp_month)
View(airport_month)
# create figure line graph
ggplot(mapping = aes(x = month_text, y = monthly_temp, color = year, group = year)) +
geom_line(data = airport_month, alpha = 0.2)
ggplot(mapping = aes(x = month_text, y = monthly_temp, color = year, group = year)) +
geom_line(data = airport_month, alpha = 0.2) +
# increase size of line graph
geom_line(data = temp_month, size = 1)
ggplot(mapping = aes(x = month_text, y = monthly_temp, color = year, group = year)) +
geom_line(data = airport_month, alpha = 0.2) +
# increase size of line graph
geom_line(data = temp_month,
mapping = aes(color = 'blue'), size = 2)
ggplot(mapping = aes(x = month_text, y = monthly_temp, color = year, group = year)) +
geom_line(data = airport_month, alpha = 0.2) +
# increase size of line graph
geom_line(data = temp_month, color = 'blue', size = 2)
ggplot(mapping = aes(x = month_text, y = monthly_temp, color = year, group = year)) +
geom_line(data = airport_month, alpha = 0.2) +
# increase size of line graph
geom_line(data = temp_month, size = 2) +
xlab('month')
ggplot(mapping = aes(x = month_text, y = monthly_temp, color = year, group = year)) +
geom_line(data = airport_month, alpha = 0.2) +
# increase size of line graph
geom_line(data = temp_month,
mapping = aes(color = year), size = 2)
temp_month <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# add a column that mutates halfhour values into months
mutate(week = floor_date(halfhour, unit = 'week'))
head(temp_month)
temp_fog <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing()
head(temp_fog)
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
head(temp_day)
head(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv')
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
head(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg)
View(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing()
View(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
View(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day'))
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(agricolae)
#### figure set 1: Mediterranean climate ####
## figure 1: mean monthly temperature of all four fog stations
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing() %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv')
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# remove any rows with missing values
remove_missing()
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(date, unit = 'date'))
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(days = floor_date(date, unit = 'day'))
View(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE))
head(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE)) %>%
# give agnostic month (for graphing) and year
ungroup() %>%
mutate(year = as_factor(year(day)),
month = as_date(day, origin = '2023-01-01' - 1))
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE)) %>%
# give agnostic month (for graphing) and year
ungroup() %>%
mutate(year = as_factor(year(day)),
month = as.Date(day, origin = '2023-01-01' - 1))
View(temp_day)
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE)) %>%
# give agnostic month (for graphing) and year
ungroup() %>%
mutate(year = as_factor(year(day)),
month = as.Date(day, origin = '2022-01-01'))
View(temp_day)
# load & clean up processed fog data
temp_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE)) %>%
# give agnostic month (for graphing) and year
ungroup() %>%
mutate(year = as_factor(year(day)),
year_day = yday(day))
View(temp_day)
station_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,Rain_mm_Tot, AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE),
day_rain = mean(Rain_mm_Tot, na.rm = TRUE)) %>%
# give agnostic month (for graphing) and year
ungroup() %>%
mutate(year = as_factor(year(day)),
year_day = yday(day))
View(temp_day)
airport_month <- read_csv('./data/airport_data/SD_Intl_Airport_1995-2023.csv') %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation)%>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup() %>%
mutate(mutate(year = as_factor(year(day)),
year_day = yday(day)),
# convert F to C
monthly_temp = (monthly_temp-32)*(5/9))
View(temp_day)
View(station_day)
airport_day <- read_csv('./data/airport_data/SD_Intl_Airport_1995-2023.csv') %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation)%>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4)))
airport_day <- read_csv('./data/airport_data/SD_Intl_Airport_1995-2023.csv',
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4)))
airport_day <- read_csv('./data/airport_data/SD_Intl_Airport_1995-2023.csv',
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation)
View(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE)
View(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
parse_date_time(date, c('Ymd HMS'))
View(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# make date/time column
mutate(date2 = as_date(date))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# make date/time column
mutate(date2 = ymd(date))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# make date/time column
parse_date_time(date, c('Ymd HMS'))
filter(airport_day, is.na(date))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# make date/time column
parse_date_time(date, c('Ymd HMS')) %>%
mutate(date = as_datetime(date))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# make date/time column
mutate(date2 = as_datetime(date))
# load and summarize airport data
# note: data pulled from SD Airport from NOAA's LCD Dataset
# see code: https://github.com/llmpandori2/sandbox/blob/main/SD_Weather_Data/SD_Weather_Abiotic_Query.R
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# make date/time column
mutate(date2 = as_date(ymd(date)))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
col_types = cols(hourlyprecipitation = col_double()),
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation)
problems(dat)
problems(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE)
###########################################
# Title: Fog Monitoring Analysis Script
# Purpose: Analyze data and create figures using fog, vegetation,
# & LWS experiment data from all fog weather stations at CABR
# Author: Virginia Javier & Lauren Pandori
# Created: 06/28/2023
# Last Edited: 08/02/2023
###########################################
#### load packages #####
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(agricolae)
#### figure set 1: Mediterranean climate ####
## figure 1: mean monthly temperature of all four fog stations
# load & clean up processed fog data
station_day <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv',
show_col_types = FALSE) %>%
# select columns halfhour and AirT_C_Avg (Average Temperature)
select(halfhour,Rain_mm_Tot, AirT_C_Avg) %>%
# take avg daily temp
mutate(day = floor_date(halfhour, unit = 'day')) %>%
group_by(day) %>%
summarize(day_temp = mean(AirT_C_Avg, na.rm = TRUE),
day_rain = mean(Rain_mm_Tot, na.rm = TRUE)) %>%
# give agnostic month (for graphing) and year
ungroup() %>%
mutate(year = as_factor(year(day)),
year_day = yday(day))
# load and summarize airport data
# note: data pulled from SD Airport from NOAA's LCD Dataset
# see code: https://github.com/llmpandori2/sandbox/blob/main/SD_Weather_Data/SD_Weather_Abiotic_Query.R
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation)
head(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day'))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup() %>%
mutate(mutate(year = as_factor(year(day)),
year_day = yday(day)),
# convert F to C
monthly_temp = (monthly_temp-32)*(5/9))
head(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE))
View(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup() %>%
mutate(mutate(year = as_factor(year(day)),
year_day = yday(day)),
# convert F to C
day_temp = (day_temp-32)*(5/9))
head(airport_day)
ggplot(mapping = aes(x = year_day, y = day_temp, color = year, group = year)) +
geom_line(data = airport_day, alpha = 0.2)
View(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup() %>%
mutate(mutate(year = as_factor(year(day)),
year_day = yday(day)),
# convert F to C
day_temp = (day_temp-32)*(5/9))
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup()
View(airport_day)
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup()
airport_day <- read_csv("data/airport_data/SD_Intl_Airport_1995-2023.csv",
show_col_types = FALSE) %>%
select(date, hourlydrybulbtemperature, hourlyprecipitation) %>%
# take first 4 characters of precip measurements + convert to numeric (some have s's or T's)
mutate(hourlyprecipitation = as.numeric(substr(hourlyprecipitation, 1,4))) %>%
# remove duplicates
distinct() %>%
# add column that mutates date/times into days %>%
mutate(day = floor_date(date, unit = 'day')) %>%
# calculate mean daily temperature and precipitation
group_by(day) %>%
summarize(day_temp = mean(hourlydrybulbtemperature, na.rm = TRUE),
day_precip = mean(hourlyprecipitation, na.rm = TRUE)) %>%
ungroup() %>%
mutate(mutate(year = as_factor(year(day)),
year_day = yday(day)),
# convert F to C
day_temp = (day_temp-32)*(5/9))
View(airport_day)
