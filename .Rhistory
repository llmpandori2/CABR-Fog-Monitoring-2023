# clean up
remove(AF_haze, clean_up_AF, exp_lws_regression, LWS_haze, reg, threshold)
# load and clean up data
water_conversion_over0 <- fog_presence %>%
# select the maximum recorded mean LW by day and station
group_by(day, Station) %>%
summarize(max = max(mean_lw)) %>%
# divide the maximum number by 150.9 (already subtracted 335.9 in fog_presence)
mutate(mL = (max/150.9)) %>%
# mutate mL values where any negative value is changed to equal 0
mutate(mL = if_else(mL <= 0, 0,mL))
# load & clean up processed fog data
fog_presence <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# selecting rows where rain total is less than or equal to 0 mm
# no rain = fog
subset(Rain_mm_Tot <= 0) %>%
# select columns 1 (Station), 2 (halfhour), 5 (LWmV_17ft_Avg), 10 (LWmV_50ft_Avg),
# and 15 (LWmV_66ft_Avg)
select(c(1,2,5,10,15)) %>%
# remove any rows with missing data
remove_missing() %>%
# calculate the average of each LWS by halfhour and station
group_by(halfhour, Station) %>%
summarize(avg_lw17 = mean(LWmV_17ft_Avg),
avg_lw50 = mean(LWmV_50ft_Avg),
avg_lw66 = mean(LWmV_66ft_Avg)) %>%
# make the table longer by adding a column identifying the LWS distance and
# adding the mV values to another column
pivot_longer(avg_lw17:avg_lw66, names_to = 'LWS_dist_ft', values_to = 'mV') %>%
mutate(day = date(halfhour)) %>%
# calculate the average leaf wetness mV by halfhour and station
group_by(day, Station) %>%
summarize(mean_lw = mean(mV)) %>%
# subtract fog threshold (335.9 mV, intercept of the calculated regression line)
mutate(mean_lw = mean_lw - 335.9) %>%
# rename stations
mutate(Station = case_when( Station == 'Event Bluff' ~ 'Ocean-Side, High Elevation',
Station == 'Tide Pool' ~ 'Ocean-Side, Low Elevation',
Station == 'Spicy Bunker' ~ 'Bay-Side, Mid-Elevation',
Station == 'New New' ~ 'Ocean-Side, Mid-Elevation'))
# load and clean up data
water_conversion_over0 <- fog_presence %>%
# select the maximum recorded mean LW by day and station
group_by(day, Station) %>%
summarize(max = max(mean_lw)) %>%
# divide the maximum number by 150.9 (already subtracted 335.9 in fog_presence)
mutate(mL = (max/150.9)) %>%
# mutate mL values where any negative value is changed to equal 0
mutate(mL = if_else(mL <= 0, 0,mL))
# create figure: line graph (can't replicate - with *day part)
ggplot() +
geom_line(data = fog_presence,
# change color order of graphs
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station))) +
geom_line(data = water_conversion_over0,
# change color order of graphs
mapping = aes(x = day, y = mL, group = Station, color = fct_rev(Station))) +
scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(~.*day, name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
View(water_conversion_over0)
head(water_conversion_over0)
# load and clean up data
water_conversion_over0 <- fog_presence %>%
# select the maximum recorded mean LW by day and station
group_by(day, Station) %>%
summarize(max = max(mean_lw)) %>%
# divide the maximum number by 150.9 (already subtracted 335.9 in fog_presence)
mutate(mL = (max/150.9)) %>%
# mutate mL values where any negative value is changed to equal 0
mutate(mL = if_else(mL <= 0, 0,mL),
max = if_else(max <= 0, 0, max))
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line() +
scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(~.*day, name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line() +
scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(trans = ~.*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F)
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line() +
scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(trans = ~mean_lw*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line() +
scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(trans = ~mean_lw*(1/150.9))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line() +
#scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(trans = ~mean_lw*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
water_conversion_over0$Station <- as_factor(water_conversion_over0$Station)
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line() +
#scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(trans = ~mean_lw*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0) %>%
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station)) +
geom_line()
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = mean_lw, group = Station, color = fct_rev(Station))) +
geom_line()
head(water_conversion_over0)
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line()
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(~.*day, name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
#scale_y_continuous(name = "Leaf Wentesss (mV)", sec.axis = sec_axis(~.*day, name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
# load and clean up data
water_conversion_over0 <- fog_presence %>%
# select the maximum recorded mean LW by day and station
group_by(day, Station) %>%
summarize(max = max(mean_lw)) %>%
# divide the maximum number by 150.9 (already subtracted 335.9 in fog_presence)
mutate(mL = (max/150.9)) %>%
# mutate mL values where any negative value is changed to equal 0
mutate(mL = if_else(mL <= 0, 0,mL),
max = if_else(max <= 0, 0, max))
head(water_conversion_over0)
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
scale_y_continuous(name = "Leaf Wetness (mV)", sec.axis = sec_axis(~.*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F)
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
scale_y_continuous(name = "Leaf Wetness (mV)", sec.axis = sec_axis(~./150.9), name =expression("H"[2]*"O"~"(mL)"))) +
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
scale_y_continuous(name = "Leaf Wetness (mV)", sec.axis = sec_axis(~.*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
scale_y_continuous(name = "Leaf Wetness (mV)", sec.axis = sec_axis(~.*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold")) +
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
ggplot(data = water_conversion_over0,
mapping = aes(x = day, y = max, group = Station, color = fct_rev(Station))) +
geom_line() +
scale_y_continuous(name = "Leaf Wetness (mV)", sec.axis = sec_axis(~.*(1/150.9), name =expression("H"[2]*"O"~"(mL)"))) +
# remove color legend
guides(color = F) +
# rename x-axis
xlab('Month') +
# rename y-axis
ylab('Leaf Wetness (mV)') +
# separate the station data into different graphs, change the order and assign colors
scale_color_manual(values = c("Ocean-Side, Low Elevation" = "#F8766D",
"Bay-Side, Mid-Elevation" = "#7CAE00",
"Ocean-Side, Mid-Elevation" = "#00BFC4",
"Ocean-Side, High Elevation" = "#C77CFF")) +
# separate station data into different graphs in this order
facet_wrap(~factor(Station,levels=c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))) +
theme_classic() +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# bold the facet wrap titles
theme(strip.text = element_text(face = "bold"))
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_presence_up.jpg', width = 6, height = 4)
# get median leaf wetness for each station
water_conversion_over0 %>%
group_by(Station) %>%
summarise(median_mV = median(mV))
# get median leaf wetness for each station
water_conversion_over0 %>%
group_by(Station) %>%
summarise(median_mV = median(max))
# get median leaf wetness for each station
water_conversion_over0 %>%
group_by(Station) %>%
summarise(median_mV = mean(max))
# load & clean up data
fog_intensity <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns 1 (Station), 2 (halfhour), 5 (LWmV_17ft_Avg), 10 (LWmV_50ft_Avg),
# 15 (LWmV_66ft_Avg), 22 (Rain_mm_Tot)
select(c(1,2,5,10,15,22)) %>%
# create a column that identifies if the data records rain or no rain
mutate(rain_present = if_else(Rain_mm_Tot > 0, 'RAIN','NO RAIN')) %>%
# make the table longer by adding a column identifying the LWS distance and
# adding the mV values to another column
pivot_longer(LWmV_17ft_Avg:LWmV_66ft_Avg, names_to = 'LWS_dist_ft', values_to = 'mV') %>%
# calculate the mean lw by halfhour, Station, and if rain is present/absent
group_by(halfhour,Station,rain_present) %>%
summarize(mean_lw = mean(mV)) %>%
# fog threshold was calculated as 335.9 mV
# create a column that identifies time where there is fog and no fog
# create another column that isolates the day from halfhour column
mutate(fog_no_fog = if_else(mean_lw > 335.9, 'FOG', 'NO FOG'),
Day = date(halfhour)) %>%
# count the number of hours per day when there is/isn't fog and add to a new column
group_by(Day,Station,fog_no_fog) %>%
count(fog_no_fog, sort = TRUE, name = "n_fog_hrs") %>%
# make the table wider by adding columns FOG, NO FOG, NA from the fog_no_fog column
# and values from the n_fog_hrs column
pivot_wider(names_from =fog_no_fog, values_from = n_fog_hrs) %>%
# rename FOG column to fog_hours
rename(fog_hours = FOG) %>%
# remove columns 3 (NO FOG) and 5 (NA)
select(-3,-5) %>%
# remove any rows with missing data
remove_missing() %>%
# tally up the number of fog hours per station and day
# divide by 2 to convert the number of half hours to hours
group_by(Day,Station) %>%
tally(fog_hours/2) %>%
# rename the stations
mutate(Station = case_when( Station == 'Event Bluff' ~ 'Ocean-Side, High Elevation',
Station == 'Tide Pool' ~ 'Ocean-Side, Low Elevation',
Station == 'Spicy Bunker' ~ 'Bay-Side, Mid-Elevation',
Station == 'New New' ~ 'Ocean-Side, Mid-Elevation'))
# calculate the median of each station
median <- fog_intensity %>%
group_by(Station) %>%
summarize(median = median(n))
# calculate ANOVA using fog intensity data
fog_aov <- aov(n ~ Station,
data = fog_intensity
)
# use HSD test and turn results into a data frame
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station")
hsd_test$Station <- fct_relevel(hsd_test$Station, c("Ocean-Side, Low Elevation",
"Ocean-Side, Mid-Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
fog_intensity$Station <- fct_relevel(fog_intensity$Station, c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
# add hsd info to fog intensity data
fog_intensity <- left_join(fog_intensity, select(hsd_test, Station, groups), by = 'Station')
# print summary of fog_aov
summary(fog_aov)
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_intensity_up.jpg', width = 7, height = 6)
# clean up
remove(fog_aov, fog_intensity, fog_presence, hsd_test, median, water_conversion_over0)
