'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
hsd_test$Station <- as_factor(hsd_test$Station,
levels = c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
hsd_test$Station <- factor(hsd_test$Station, ordered = T,
levels = c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
hsd_test$Station
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = fct_rev(Station), y = n, group = Station, fill = fct_rev(Station))) +
# remove outlier points
geom_boxplot(outlier.shape = NA) +
# add letter labels (calculated in ANOVA test section)
geom_label(data = hsd_test, mapping = aes(x = Station, y = n + 2, label = groups, fontface='bold'), label.size = NA,fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename the Station labels on x-axis
scale_x_discrete(labels = c("Ocean-Side, Low Elevation", "Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation", "Ocean-Side, High Elevation")) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Number of Fog Hours") +
theme_classic() +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 10)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold"))
hsd_test$Station
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = fct_rev(Station), y = n, group = Station, fill = fct_rev(Station))) +
# remove outlier points
geom_boxplot(outlier.shape = NA)
unique(fog_intensity$Station)
fog_intensity$Station <- factor(fog_intensity$Station, ordered = T,
levels = c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
unique(fog_intensity$Station)
# use HSD test and turn results into a data frame
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station") %>%
fct_relevel(Station, c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
# use HSD test and turn results into a data frame
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station") %>%
fct_relevel(>$Station, c('Ocean-Side, Low Elevation',
# use HSD test and turn results into a data frame
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station") %>%
fct_relevel(.$Station, c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
hsd_test <- fct_relevel(hsd_test$Station, c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
hsd_test$Station
hsd_test$Station
# use HSD test and turn results into a data frame
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station")
hsd_test <- fct_relevel(hsd_test$Station, c('Ocean-Side, Low Elevation',
'Bay-Side, Mid-Elevation',
'Ocean-Side, Mid-Elevation',
'Ocean-Side, High Elevaton'))
unique(hsd_test$Station)
# use HSD test and turn results into a data frame
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station")
unique(hsd_test$Station)
hsd_test <- fct_relevel(hsd_test$Station, c("Ocean-Side, Low Elevation",
"Ocean-Side, Mid-Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
hsd_test
hsd_test$Station <- fct_relevel(hsd_test$Station, c("Ocean-Side, Low Elevation",
"Ocean-Side, Mid-Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
hsd_test <- as.data.frame(HSD.test(fog_aov, trt = 'Station')$group) %>%
# make station names into a column
rownames_to_column(var = "Station")
hsd_test$Station <- fct_relevel(hsd_test$Station, c("Ocean-Side, Low Elevation",
"Ocean-Side, Mid-Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
hsd_test
fog_intensity$Station <- fct_relevel(fog_intensity$Station, c("Ocean-Side, Low Elevation",
"Ocean-Side, Mid-Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
unique(fog_intensity$Station)
# load & clean up data
fog_intensity <- read_csv('./data/clean_data/Combined_FogMon_Data2023.csv') %>%
# select columns 1 (Station), 2 (halfhour), 5 (LWmV_17ft_Avg), 10 (LWmV_50ft_Avg),
# 15 (LWmV_66ft_Avg), 22 (Rain_mm_Tot)
select(c(1,2,5,10,15,22)) %>%
# create a column that identifies if the data records rain or no rain
mutate(rain_present = if_else(Rain_mm_Tot > 0, 'RAIN','NO RAIN')) %>%
# make the table longer by adding a column identifying the LWS distance and
# adding the mV values to another column
pivot_longer(LWmV_17ft_Avg:LWmV_66ft_Avg, names_to = 'LWS_dist_ft', values_to = 'mV') %>%
# calculate the mean lw by halfhour, Station, and if rain is present/absent
group_by(halfhour,Station,rain_present) %>%
summarize(mean_lw = mean(mV)) %>%
# fog threshold was calculated as 335.9 mV
# create a column that identifies time where there is fog and no fog
# create another column that isolates the day from halfhour column
mutate(fog_no_fog = if_else(mean_lw > 335.9, 'FOG', 'NO FOG'),
Day = date(halfhour)) %>%
# count the number of hours per day when there is/isn't fog and add to a new column
group_by(Day,Station,fog_no_fog) %>%
count(fog_no_fog, sort = TRUE, name = "n_fog_hrs") %>%
# make the table wider by adding columns FOG, NO FOG, NA from the fog_no_fog column
# and values from the n_fog_hrs column
pivot_wider(names_from =fog_no_fog, values_from = n_fog_hrs) %>%
# rename FOG column to fog_hours
rename(fog_hours = FOG) %>%
# remove columns 3 (NO FOG) and 5 (NA)
select(-3,-5) %>%
# remove any rows with missing data
remove_missing() %>%
# tally up the number of fog hours per station and day
# divide by 2 to convert the number of half hours to hours
group_by(Day,Station) %>%
tally(fog_hours/2) %>%
# rename the stations
mutate(Station = case_when( Station == 'Event Bluff' ~ 'Ocean-Side, High Elevation',
Station == 'Tide Pool' ~ 'Ocean-Side, Low Elevation',
Station == 'Spicy Bunker' ~ 'Bay-Side, Mid-Elevation',
Station == 'New New' ~ 'Ocean-Side, Mid-Elevation'))
unique(fog_intensity$Station)
fog_intensity$Station <- fct_relevel(fog_intensity$Station, c("Ocean-Side, Low Elevation",
"Ocean-Side, Mid-Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
fog_intensity$Station
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot(outlier.shape = NA)
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot(outlier.shape = NA) +
# add letter labels (calculated in ANOVA test section)
geom_label(data = hsd_test, mapping = aes(x = Station, y = n + 2, label = groups, fontface='bold'), label.size = NA,fill = NA) +
# remove color legend
guides(fill = FALSE)
fog_intensity
hsd_test
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot()
# add hsd info to fog intensity data
fog_intensity <- left_join(fog_intensity, select(hsd_test, Station, groups), by = 'Station')
head(fog_intensity)
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = n + 2, label = groups, fontface='bold'), label.size = NA,fill = NA) +
# remove color legend
guides(fill = FALSE)
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = mean(n) + 2, label = groups, fontface='bold'), label.size = NA,fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename the Station labels on x-axis
scale_x_discrete(labels = c("Ocean-Side, Low Elevation", "Bay-Side, Mid-Elevation", "Ocean-Side, Mid-Elevation", "Ocean-Side, High Elevation")) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Number of Fog Hours") +
theme_classic() +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 10)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold"))
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot()
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE)
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic()
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 10)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold"))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 10)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black',size=10)) +
# change the axis titles font size and make labels bold
theme(axis.title=element_text(size=12,face="bold"))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 10)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12, face = 'bold'))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 10)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 12)) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
hsd_test
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_intensity_up.jpg', width = 6, height = 6)
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.1, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0.58, hjust = 1, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 0, hjust = 1, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_intensity_up.jpg', width = 6, height = 6)
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_intensity_up.jpg', width = 6.5, height = 6)
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_intensity_up.jpg', width = 7, height = 6)
hsd_test
TukeyHSD(fog_aov)
fog_intensity$Station <- fct_relevel(fog_intensity$Station, c("Ocean-Side, Low Elevation",
"Bay-Side, Mid-Elevation",
"Ocean-Side, Mid-Elevation",
"Ocean-Side, High Elevation"))
# create figure: boxplot
ggplot(data = fog_intensity,
# reverse the order and color of stations
mapping = aes(x = Station, y = n, group = Station, fill = Station)) +
# remove outlier points
geom_boxplot() +
# add letter labels (calculated in ANOVA test section)
geom_label(mapping = aes(x = Station, y = 0, label = groups, fontface='bold'), label.size = NA, fill = NA) +
# remove color legend
guides(fill = FALSE) +
# rename x-axis
xlab("Station") +
# rename y-axis
ylab("Fog Hours") +
theme_classic() +
theme(text = element_text(size = 12)) +
# tilt x-axis labels to 45 degrees
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 12)) +
theme(axis.title = element_text(face = 'bold')) +
# change the axis line thickness
theme(axis.line=element_line(size=1))+
# change the axis labels color and font size
theme(axis.text=element_text(colour = 'black', size = 12))
# save figure as a .jpg file (change size if needed)
ggsave('./figs/fog_intensity_up.jpg', width = 7, height = 6)
